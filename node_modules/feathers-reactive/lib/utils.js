'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promisify = promisify;
exports.makeSorter = makeSorter;

var _utils = require('feathers-commons/lib/utils');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var promiseMethods = ['then', 'catch'];
function promisify(obj, promise) {
  promiseMethods.forEach(function (method) {
    Object.defineProperty(obj, method, {
      enumerable: false,
      value: function value() {
        return promise.then.apply(promise, arguments);
      }
    });
  });

  return obj;
}

function makeSorter(query, options) {
  // The sort function (if $sort is set)
  var sorter = query.$sort ? (0, _utils.sorter)(query.$sort) : (0, _utils.sorter)(_defineProperty({}, options.idField, 1));

  return function (result) {
    var isPaginated = !!result[options.dataField];
    var data = isPaginated ? result[options.dataField] : result;

    if (sorter) {
      data = data.sort(sorter);
    }

    var limit = null;

    if (typeof result.limit === 'number') {
      limit = result.limit;
    } else if (query.$limit) {
      limit = parseInt(query.$limit, 10);
    }

    if (limit && !isNaN(limit)) {
      data = data.slice(0, limit);
    }

    if (isPaginated) {
      result[options.dataField] = data;
    } else {
      result = data;
    }

    return result;
  };
}